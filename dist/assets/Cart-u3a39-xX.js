import{r as y,f as C,j as t,q as N,c as h,d as p,w as I,g as k,i as q,h as w,T as x}from"./index-CaDHxqAo.js";import{Q as P,B as l}from"./ReactToastify-Ca0VFEe9.js";const D=()=>{const[o,i]=y.useState(JSON.parse(localStorage.getItem("cart"))||[]),v=C();y.useEffect(()=>{const e=()=>{i(JSON.parse(localStorage.getItem("cart"))||[])};return window.addEventListener("storage",e),()=>window.removeEventListener("storage",e)},[]);const b=e=>{const r=o.filter((a,c)=>c!==e);localStorage.setItem("cart",JSON.stringify(r)),i(r),window.dispatchEvent(new Event("storage")),l.error("Item removed from cart!")},g=(e,r)=>{const a=[...o];a[e].quantity+=r,a[e].quantity<1&&(a[e].quantity=1),a[e].totalPrice=parseFloat(a[e].price.substring(1))*a[e].quantity,localStorage.setItem("cart",JSON.stringify(a)),i(a),window.dispatchEvent(new Event("storage"))},S=async()=>{if(o.length===0){l.info("Your cart is empty.");return}try{const e=JSON.parse(localStorage.getItem("user")),r=[];let a=0;const c=new Map;for(const s of o){console.log(`Updating product: ${s.name}`);const u=N(h(p,"Products"),I("product_name","==",s.name)),d=await k(u);if(d.empty){l.error(`Product ${s.name} not found in the database.`);return}else{const m=d.docs[0],n=m.data(),f=n.quantity-s.quantity;if(f<0){l.error(`Not enough stock for ${s.name}.`);return}await q(m.ref,{quantity:f}),console.log(`Product ${s.name} updated successfully.`);const j={product_name:s.name,price:parseFloat(s.price.substring(1)),quantity:s.quantity,total:s.totalPrice,seller:n.username};r.push(j),a+=s.totalPrice,c.has(n.username)||c.set(n.username,[]),c.get(n.username).push(j)}}await w(h(p,"Orders"),{uid:e.uid,username:e.username,orderDate:x.now(),totalAmount:a,status:"completed",orderItems:r});for(const[s,u]of c.entries()){const d=u.reduce((m,n)=>m+n.total,0);await w(h(p,"Sales"),{sellerUsername:s,orderDate:x.now(),totalAmount:d,status:"completed",orderItems:u,buyerUsername:e.username})}localStorage.setItem("checkout_cart",JSON.stringify(o)),v("/checkout-success"),localStorage.removeItem("cart"),window.dispatchEvent(new Event("storage")),i([]),l.success("Checkout successful!")}catch(e){console.error("Error during checkout:",e),l.error("An error occurred during checkout. Please try again.")}};return t.jsxs("div",{className:"cart-container",children:[t.jsx("h1",{children:"Your Shopping Cart"}),o.length>0?t.jsxs("table",{className:"cart-table",children:[t.jsx("thead",{children:t.jsxs("tr",{children:[t.jsx("th",{children:"Product"}),t.jsx("th",{children:"Price"}),t.jsx("th",{children:"Quantity"}),t.jsx("th",{children:"Total Price"}),t.jsx("th",{children:"Actions"})]})}),t.jsx("tbody",{children:o.map((e,r)=>t.jsxs("tr",{children:[t.jsx("td",{children:e.name}),t.jsx("td",{children:e.price}),t.jsxs("td",{children:[t.jsx("button",{className:"b",onClick:()=>g(r,-1),children:"-"}),e.quantity,t.jsx("button",{className:"b",onClick:()=>g(r,1),children:"+"})]}),t.jsxs("td",{children:["$",e.totalPrice.toFixed(2)]}),t.jsx("td",{children:t.jsx("button",{onClick:()=>b(r),className:"remove-button",children:"Remove"})})]},r))})]}):t.jsx("p",{children:"Your cart is empty."}),t.jsxs("div",{className:"total",children:["Total: $",o.reduce((e,r)=>e+r.totalPrice,0).toFixed(2)]}),t.jsx("div",{className:"c",children:t.jsx("button",{onClick:S,className:"checkout-button",children:"Checkout"})}),t.jsx(P,{position:"bottom-center",autoClose:3e3,hideProgressBar:!0,newestOnTop:!1,closeOnClick:!0,rtl:!1,pauseOnFocusLoss:!1,draggable:!1,pauseOnHover:!0})]})};export{D as default};
